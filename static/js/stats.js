class StatsPage {
    constructor() {
        this.init();
    }

    init() {
        this.loadStats();
    }

    async loadStats() {
        try {
            const response = await fetch('/api/stats');

            if (!response.ok) {
                throw new Error(`HTTP ${response.status}: ${response.statusText}`);
            }

            const data = await response.json();

            if (data.error) {
                throw new Error(data.error);
            }

            this.displayStats(data.stats || data); // –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –æ–±–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –æ—Ç–≤–µ—Ç–∞

        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
            document.getElementById('statsContainer').innerHTML =
                `<div class="alert alert-danger">
                    <h6>‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏</h6>
                    <p>${error.message}</p>
                    <button class="btn btn-outline-danger btn-sm" onclick="statsPage.loadStats()">
                        üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                    </button>
                </div>`;
        }
    }

    displayStats(stats) {
        const container = document.getElementById('statsContainer');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö
        if (!stats) {
            container.innerHTML = `
                <div class="alert alert-warning">
                    <h6>‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</h6>
                    <p>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</p>
                </div>
            `;
            return;
        }

        // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
        const totalVacancies = stats.total_vacancies || 0;
        const bySource = stats.by_source || {};
        const topCompanies = stats.top_companies || [];
        const topLocations = stats.top_locations || [];

        let html = `
            <div class="row mb-4">
                <div class="col-md-12">
                    <div class="card text-center">
                        <div class="card-body">
                            <h1 class="card-title text-primary">${totalVacancies}</h1>
                            <p class="card-text">–í—Å–µ–≥–æ –≤–∞–∫–∞–Ω—Å–∏–π –≤ –±–∞–∑–µ</p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row mb-4">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h5>üìä –ü–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º</h5>
                        </div>
                        <div class="card-body">
        `;

        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º
        if (Object.keys(bySource).length > 0) {
            for (const [source, count] of Object.entries(bySource)) {
                const percentage = totalVacancies > 0 ? ((count / totalVacancies) * 100).toFixed(1) : '0';
                const sourceDisplayName = source === 'hh' ? 'HH.RU' :
                                        source === 'superjob' ? 'SUPERJOB' :
                                        source.toUpperCase();

                html += `
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <span>${sourceDisplayName}</span>
                        <span class="badge bg-primary">${count} (${percentage}%)</span>
                    </div>
                `;
            }
        } else {
            html += '<p class="text-muted">–î–∞–Ω–Ω—ã–µ –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç</p>';
        }

        html += `
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h5>üè¢ –¢–æ–ø –∫–æ–º–ø–∞–Ω–∏–π</h5>
                        </div>
                        <div class="card-body">
        `;

        // –¢–æ–ø –∫–æ–º–ø–∞–Ω–∏–π
        if (topCompanies.length > 0) {
            topCompanies.forEach(company => {
                const companyName = company.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
                const companyCount = company.count || 0;

                html += `
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <span class="text-truncate" title="${companyName}">${companyName}</span>
                        <span class="badge bg-success">${companyCount}</span>
                    </div>
                `;
            });
        } else {
            html += '<p class="text-muted">–î–∞–Ω–Ω—ã–µ –æ –∫–æ–º–ø–∞–Ω–∏—è—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç</p>';
        }

        html += `
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-header">
                            <h5>üìç –¢–æ–ø –ª–æ–∫–∞—Ü–∏–∏</h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
        `;

        // –¢–æ–ø –ª–æ–∫–∞—Ü–∏–∏
        if (topLocations.length > 0) {
            topLocations.forEach(location => {
                const locationName = location.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
                const locationCount = location.count || 0;

                html += `
                    <div class="col-md-6 mb-2">
                        <div class="d-flex justify-content-between align-items-center">
                            <span class="text-truncate" title="${locationName}">${locationName}</span>
                            <span class="badge bg-info">${locationCount}</span>
                        </div>
                    </div>
                `;
            });
        } else {
            html += '<div class="col-12"><p class="text-muted">–î–∞–Ω–Ω—ã–µ –æ –ª–æ–∫–∞—Ü–∏—è—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç</p></div>';
        }

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        if (stats.time_stats) {
            const timeStats = stats.time_stats;
            html += `
                </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row mt-4">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-header">
                            <h5>‚è∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏</h5>
                        </div>
                        <div class="card-body">
                            <div class="row text-center">
                                <div class="col-md-4">
                                    <div class="bg-light p-3 rounded">
                                        <h4 class="text-primary">${timeStats.last_24_hours || 0}</h4>
                                        <small class="text-muted">–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞</small>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="bg-light p-3 rounded">
                                        <h4 class="text-success">${timeStats.last_week || 0}</h4>
                                        <small class="text-muted">–ó–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é</small>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="bg-light p-3 rounded">
                                        <h4 class="text-info">${timeStats.last_month || 0}</h4>
                                        <small class="text-muted">–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            `;
        } else {
            html += `
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            `;
        }

        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
        const updateTime = new Date().toLocaleString('ru-RU');
        html += `
            <div class="row mt-3">
                <div class="col-12">
                    <div class="text-center text-muted">
                        <small>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞: ${updateTime}</small>
                        <button class="btn btn-outline-primary btn-sm ms-2" onclick="statsPage.loadStats()">
                            üîÑ –û–±–Ω–æ–≤–∏—Ç—å
                        </button>
                    </div>
                </div>
            </div>
        `;

        container.innerHTML = html;
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
let statsPage;
document.addEventListener('DOMContentLoaded', function() {
    statsPage = new StatsPage();
});