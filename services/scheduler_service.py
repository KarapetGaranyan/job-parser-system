from scheduler.simple_scheduler import SimpleScheduler
from services.search_service import SearchService
from services.vacancy_service import VacancyService
import logging

logger = logging.getLogger(__name__)


class SchedulerService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏ –ø–æ–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π"""

    def __init__(self):
        self.scheduler = SimpleScheduler()
        self.search_service = SearchService()
        self.vacancy_service = VacancyService()

    def start(self):
        """–ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
        print("üîç –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞...")
        print("‚ñ∂Ô∏è –°—Ç–∞—Ä—Ç—É–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫...")
        self.scheduler.start()
        print(f"‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω. –ó–∞–¥–∞—á: {len(self.scheduler.jobs)}")

    def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
        self.scheduler.stop()

    def get_status(self):
        """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
        return {
            'running': self.scheduler.running,
            'jobs': self.scheduler.get_jobs_status(),
            'debug': {
                'jobs_count': len(self.scheduler.jobs),
                'jobs_list': list(self.scheduler.jobs.keys())
            }
        }

    def clear_all_jobs(self):
        """–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏"""
        jobs_count = len(self.scheduler.jobs)
        self.scheduler.jobs.clear()
        print(f"üóëÔ∏è –û—á–∏—â–µ–Ω—ã –≤—Å–µ –∑–∞–¥–∞—á–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞. –£–¥–∞–ª–µ–Ω–æ: {jobs_count}")
        return jobs_count

    def _custom_search_job(self, keywords_text, city='', limit=20):
        """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–¥–∞—á–∞ –ø–æ–∏—Å–∫–∞ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º"""
        keywords_list = [kw.strip() for kw in keywords_text.split('\n') if kw.strip()]

        print(f"üîç –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ–ø–æ–∏—Å–∫ –ø–æ {len(keywords_list)} –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º")

        total_found = 0
        for keyword in keywords_list:
            try:
                print(f"üîç –ü–æ–∏—Å–∫: '{keyword}'" + (f" –≤ {city}" if city else ""))

                result = self.search_service.search_all_sources(
                    query=keyword,
                    city=city,
                    limit=limit
                )

                found = result.get('total', 0)
                total_found += found

                print(f"‚úÖ '{keyword}': –Ω–∞–π–¥–µ–Ω–æ {found} –≤–∞–∫–∞–Ω—Å–∏–π")

            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ '{keyword}': {e}")

        city_info = f" –≤ {city}" if city else ""
        print(f"üéâ –ê–≤—Ç–æ–ø–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω{city_info}. –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ: {total_found} –≤–∞–∫–∞–Ω—Å–∏–π")

        return {
            'total_found': total_found,
            'keywords_processed': len(keywords_list),
            'city': city
        }