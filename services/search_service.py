from parsers.hh_parser import HHParser
from parsers.superjob_parser import SuperJobParser


class SearchService:
    def __init__(self):
        self.hh_parser = HHParser()
        self.sj_parser = SuperJobParser()

    def search_all_sources(self, query: str, city: str = '', limit: int = 50):
        """–ü–æ–∏—Å–∫ –≤–∞–∫–∞–Ω—Å–∏–π –Ω–∞ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö"""
        print(f"üîç –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫: {query}")

        results = {
            'query': query,
            'vacancies': [],
            'sources': {
                'hh': {'count': 0, 'status': 'pending'},
                'superjob': {'count': 0, 'status': 'pending'}
            },
            'total': 0
        }

        # –ü–æ–∏—Å–∫ –Ω–∞ HH.ru
        try:
            print("üìä –ü–∞—Ä—Å–∏–Ω–≥ HH.ru...")
            hh_vacancies = self.hh_parser.search(query, limit=limit, city=city)
            results['vacancies'].extend(hh_vacancies)
            results['sources']['hh'] = {
                'count': len(hh_vacancies),
                'status': 'success'
            }
            print(f"‚úÖ HH.ru: {len(hh_vacancies)} –≤–∞–∫–∞–Ω—Å–∏–π")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ HH.ru: {e}")
            results['sources']['hh'] = {
                'count': 0,
                'status': 'error',
                'error': str(e)
            }

        # –ü–æ–∏—Å–∫ –Ω–∞ SuperJob
        try:
            print("üìä –ü–∞—Ä—Å–∏–Ω–≥ SuperJob...")
            sj_vacancies = self.sj_parser.search(query, limit=limit, city=city)
            results['vacancies'].extend(sj_vacancies)
            results['sources']['superjob'] = {
                'count': len(sj_vacancies),
                'status': 'success'
            }
            print(f"‚úÖ SuperJob: {len(sj_vacancies)} –≤–∞–∫–∞–Ω—Å–∏–π")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ SuperJob: {e}")
            results['sources']['superjob'] = {
                'count': 0,
                'status': 'error',
                'error': str(e)
            }

        results['total'] = len(results['vacancies'])
        print(f"üéâ –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω. –í—Å–µ–≥–æ: {results['total']} –≤–∞–∫–∞–Ω—Å–∏–π")

        return results